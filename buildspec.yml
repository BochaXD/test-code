version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - npm ci --silent
      - |
        DEP_MSG=$(npx npm-deprecated-check current 2>&1 | grep -v 'Checking')
        if echo "$DEP_MSG" | grep -q 'deprecated:'; then
          echo -e "\n\033[1;33m⚠️  Librerías DEPRECADAS encontradas:\033[0m"
          echo -e "┌──────────────────────────────────────────────────────────────────────────────────────────────────────────┐"
          echo -e "│ \033[1mLibrería\033[0m                         │ \033[1mMensaje\033[0m                                    "
          echo -e "├──────────────────────────────────────────────────────────────────────────────────────────────────────────┤"
          echo "$DEP_MSG" | awk '
            BEGIN { RS=""; FS="\n" }
            {
              for (i = 1; i <= NF; i++) {
                if ($i ~ /WARN .*@.*:/ && (i+1)<=NF && $(i+1) ~ /deprecated:/) {
                  gsub(/^ WARN[[:space:]]+/, "", $i);
                  gsub(/^deprecated:[[:space:]]*/, "", $(i+1));
                  printf "│ \033[1;33m%-30s\033[0m │ %-65s │\n", $i, $(i+1)
                }
              }
            }
          '
          echo -e "└──────────────────────────────────────────────────────────────────────────────────────────────────────────┘"
        else
          echo -e "\n✅ No se encontraron librerías deprecadas."
        fi

      - |
        OUT_MSG=$(npm outdated || true)
        if echo "$OUT_MSG" | grep -q 'Package'; then
          echo -e "\n\033[1;33m⚠️  Librerías DESACTUALIZADAS:\033[0m"
          echo -e "┌────────────┬─────────┬────────┬────────┬────────────────────────────┬──────────────┐"
          echo -e "│ \033[1mPackage\033[0m     │ \033[1mCurrent\033[0m │ \033[1mWanted\033[0m │ \033[1mLatest\033[0m │ \033[1mUbicación\033[0m                  │ \033[1mDependencia\033[0m   │"
          echo -e "├────────────┼─────────┼────────┼────────┼────────────────────────────┼──────────────┤"
          echo "$OUT_MSG" | tail -n +2 | while read -r pkg curr want latest loc dep; do
            printf "│ \033[1;33m%-10s\033[0m │ %-7s │ %-6s │ %-6s │ %-26s │ %-12s │\n" "$pkg" "$curr" "$want" "$latest" "$loc" "$dep"
          done
          echo -e "└────────────┴─────────┴────────┴────────┴────────────────────────────┴──────────────┘"

        else
          echo "✅ Todas las librerías están actualizadas."
        fi

  build:
    commands:
      - npm test --silent

reports:
  pruebas:
    base-directory: .
    files:
      - 'reports/junit.xml'
    file-format: 'JUNITXML'

  cobertura_codigo:
    base-directory: 'coverage'
    files:
      - 'lcov-report/**/*'
      - 'clover.xml'
    file-format: 'CLOVERXML'
    discard-paths: no

artifacts:
  files:
    - reports/junit.xml
    - coverage/lcov.info
    - coverage/lcov-report/index.html
    - coverage/coverage-final.json
    - dist/**
